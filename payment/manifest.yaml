apiVersion: v1
kind: ConfigMap
metadata:
  name: payment
  Namespace: roboshop
  labels:
    component: payment
    project: roboshop
    tier: app
data:
  CART_HOST: "cart"
  CART_PORT: "8080"
  USER_HOST: "user"
  USER_PORT: "8080"
  AMQP_HOST: "rabbitmq"
---
apiVersion: v1
kind: Secret
metadata:
  name: payment
  labels:
    component: payment
    project: roboshop
    tier: database
type: Opaque
data:
  AMQP_USER: "roboshop"
  AMQP_PASS: "roboshop123"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  Namespace: roboshop
  #replica set labels
  labels:
    component: payment
    project: roboshop
    tier: app
spec:
  replicas: 1
  # these are the labels replica set use to create pod replicas,this should match pod lables
  selector:
    matchLabels:
      component: payment
      project: roboshop
      tier: app
  # this is pod definition
  template:
    metadata:
      labels:
        component: payment
        project: roboshop
        tier: app
    spec:
      containers:
      - name: payment
        image: chilakamarthinavya/payment:v1
        envFrom:
        - configMapRef:
            name: payment
        - secretRef:
            name: payment
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  Namespace: roboshop
  labels:
    component: payment
    project: roboshop
    tier: app
spec: 
  selector: 
    component: payment
    project: roboshop
    tier: app
  ports:
    - protocol: TCP
      port: 8080 #service port
      targetPort: 8080 #container port